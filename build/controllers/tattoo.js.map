{"version":3,"sources":["../../src/controllers/tattoo.js"],"names":["req","res","tattoo","status","send","json","error","tattooAll","params","album","length","tattooByAlbum","name","tattooByAlbumAndName","body","console","log","good","tattooCreate","options","fileName","sendFile","err","msg","tattooFindImage","files","final","tattooUploadNewImage","payload","tattooModifyByName","id","tattooDeleteById"],"mappings":"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","file":"tattoo.js","sourcesContent":["import {getTattooAll, createNewTatttoo, getTattooByAlbum, getTattooByAlbumAndName, modifyTattooByName, deleteTattooById} from '../models/v0/tattoo'\nimport {getFileOptions, uploadFile} from '../services/file'\n\n// TATTOO Controller\n// -----------------------------------------------------------------------------\nexport async function tattooAll (req, res){\n    try{\n        const tattoo = await getTattooAll()\n        res.status(200).send(tattoo)\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooByAlbum (req, res){\n    try{\n        const tattoo = await getTattooByAlbum(req.params.album)\n\n        if (tattoo.length === 0){\n            return res.status(400).json({error : 'No images in Album'})\n        } else{\n        res.status(200).send(tattoo)\n        }\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooByAlbumAndName (req, res){\n    try{\n        const tattoo = await getTattooByAlbumAndName(req.params.name, req.params.album)\n\n        if (tattoo.length === 0){\n            return res.status(400).json({error : 'No image in Album'})\n        } else{\n        res.status(200).send(tattoo)\n        }\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooCreate (req, res){\n    try{\n        //const hop = {\"size\":\"10x10\", \"album\":\"Tattoo\", \"image\":{\"url\":\"ahoj.jpg\"}}\n        const tattoo = await createNewTatttoo(req.body)\n        console.log(tattoo)\n        res.status(200).json({good : 'Tattoo created'})\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooFindImage (req, res){\n    try{\n        const options = await getFileOptions()\n        const fileName = req.params.name\n\n        res.sendFile(fileName, options, (err) => {\n            if (err)\n            return res.status(404).json({\n              error: {\n                msg: 'File not found'\n              }\n            })\n        \n            res.status(200)\n        })\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooUploadNewImage (req, res){\n    try{\n        if (!req.files){\n            return res.status(400).json({\n                error: {\n                    msg: 'No file send or name of image already existed'\n                }\n            })\n        }\n\n        const final = await uploadFile(req.files)\n\n        if (final === false){\n            return res.status(400).json({\n                error: {\n                    msg: 'Name of image already existed'\n                }\n            })\n        }else {\n            res.status(200).json({good : 'Tattoo image uploaded'})\n        }    \n        \n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooModifyByName (req, res){\n    try{\n        const payload = req.body\n        const name = req.params.name\n        const tattoo = await modifyTattooByName(name, payload)\n        if (tattoo === null){\n            return res.status(400).json({error : 'Nothing changed'})\n        }else {\n            res.status(200).send(tattoo)\n        }\n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}\n\nexport async function tattooDeleteById (req, res){\n    try{\n        const id = req.params.id\n        const tattoo = await deleteTattooById(id)\n        console.log(id)\n        console.log(tattoo)\n        res.status(200).send(tattoo)\n    \n    }catch(error){\n        res.status(400).json({error : 'Bad request'})\n    }\n}"]}