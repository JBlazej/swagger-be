{"version":3,"sources":["../../../src/models/v0/user.js"],"names":["model","UserSchema","find","user","getUserAll","id","_id","getUserById","email","getUserByEmail","password","User","save","createNewUser","mongoose","Schema","type","String","unique","trim","lowercase","required","created","Date","default","now"],"mappings":";;;;;;;AAuBA;AACA;;qEACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACc,eAAQA,KAAR,CAAc,MAAd,EAAsBC,UAAtB,EAAkCC,IAAlC,CAAuC,EAAvC,CADd;;AAAA;AACCC,gBADD;AAAA,6CAGEA,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,U;;;;;;sEAMf,kBAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACc,eAAQL,KAAR,CAAc,MAAd,EAAsBC,UAAtB,EAAkCC,IAAlC,CAAuC,EAACI,KAAKD,EAAN,EAAvC,CADd;;AAAA;AACCF,gBADD;AAAA,8CAGEA,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeI,W;;;;;;sEAMf,kBAA+BC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACc,eAAQR,KAAR,CAAc,MAAd,EAAsBC,UAAtB,EAAkCC,IAAlC,CAAuC,EAACM,OAAOA,KAAR,EAAvC,CADd;;AAAA;AACCL,gBADD;AAAA,8CAGEA,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeM,c;;;;;;sEAMf,kBAA8BD,KAA9B,EAAqCE,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACc,eAAQV,KAAR,CAAc,MAAd,EAAsBC,UAAtB,CADd;;AAAA;AACCU,gBADD;AAECR,gBAFD,GAEQ,IAAIQ,IAAJ,CAAS,EAACH,OAAOA,KAAR,EAAeE,UAAUA,QAAzB,EAAT,CAFR;;AAGLP,iBAAKS,IAAL;;AAHK,8CAKET,IALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeU,a;;;;;AA3CtB;;;;AACA;;;;;;AAEA;AACA;AACA,IAAMZ,aAAa,IAAIa,mBAASC,MAAb,CAAoB;AACrCP,SAAO;AACLQ,UAAMC,MADD;AAELC,YAAQ,IAFH;AAGLC,UAAM,IAHD;AAILC,eAAW,IAJN;AAKLC,cAAU;AALL,GAD8B;AAQrCX,YAAU;AACRM,UAAMC,MADE;AAERI,cAAU;AAFF,GAR2B;AAYrCC,WAAS;AACPN,UAAMO,IADC;AAEPC,aAASD,KAAKE;AAFP;AAZ4B,CAApB,CAAnB","file":"user.js","sourcesContent":["import mongoose from 'mongoose'\nimport {getDB} from '..'\n\n// USERS SCHEMA\n// -----------------------------------------------------------------------------\nconst UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    unique: true,\n    trim: true,\n    lowercase: true,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  created: {\n    type: Date,\n    default: Date.now\n  }\n})\n\n// METHODS\n// -----------------------------------------------------------------------------\nexport async function getUserAll () {\n  const user = await getDB().model('User', UserSchema).find({})\n\n  return user\n}\n\nexport async function getUserById (id) {\n  const user = await getDB().model('User', UserSchema).find({_id: id})\n\n  return user\n}\n\nexport async function getUserByEmail (email) {\n  const user = await getDB().model('User', UserSchema).find({email: email})\n  \n  return user\n}\n\nexport async function createNewUser (email, password) {\n  const User = await getDB().model('User', UserSchema)\n  const user = new User({email: email, password: password})\n  user.save()\n\n  return user\n\n}\n"]}