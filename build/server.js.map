{"version":3,"sources":["../src/server.js"],"names":["app","use","corsOptions","express","static","__dirname","bodyParser","json","urlencoded","extended","path","join","router","set","process","env","PORT","shuttingDown","req","res","next","setHeader","err","Error","status","send","message","get","logger","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;AACA;AACA;AACA;AACA;AACA;AACAA,IAAIC,GAAJ,CAAQ,oBAAKC,kBAAL,CAAR;AACA;AACAF,IAAIC,GAAJ,CAAQ,kCAAR;AACA;AACAD,IAAIC,GAAJ,CAAQ,SAAR,EAAmBE,kBAAQC,MAAR,CAAeC,YAAY,YAA3B,CAAnB;AACA;AACAL,IAAIC,GAAJ,CAAQK,qBAAWC,IAAX,EAAR;AACAP,IAAIC,GAAJ,CAAQK,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACA;AACAT,IAAIC,GAAJ,CAAQ,6BAAR;AACA;AACAD,IAAIC,GAAJ,CAAQ,4BAAaS,eAAKC,IAAL,CAAUN,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAb,CAAR;AACA;AACAL,IAAIC,GAAJ,CAAQ,kCAAR;AACA;AACAD,IAAIC,GAAJ,CAAQW,gBAAR;AACA;AACAZ,IAAIa,GAAJ,CAAQ,MAAR,EAAiBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArC;;AAEA;AACA,IAAIC,eAAe,KAAnB;;AAEAjB,IAAIC,GAAJ,CAAQ,UAACiB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAI,CAACH,YAAL,EAAmB,OAAOG,MAAP;;AAEnBD,MAAIE,SAAJ,CAAc,YAAd,EAA4B,OAA5B;AACA,MAAMC,MAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACD,CAPD;;AASAtB,IAAIC,GAAJ,CAAQ,UAACiB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAME,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAJ,OAAKE,GAAL;AACD,CAJD;;AAMAtB,IAAIC,GAAJ,CAAQ,UAACqB,GAAD,EAAMJ,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BD,MAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAL,MAAIM,IAAJ,CAAS,EAAC,SAASH,IAAII,OAAd,EAAT;AACA,MAAI1B,IAAI2B,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCC,qBAAOC,KAAP,CAAaP,GAAb;AACD;AACF,CAND;;kBAQetB,G","file":"server.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport 'babel-polyfill'\nimport router from './router'\nimport logger from './logger'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport serveFavicon from 'serve-favicon'\nimport path from 'path'\nimport expressFileupload from 'express-fileupload'\nimport { corsOptions } from './conf/cors'\nimport { connectDB } from './models'\nimport sslRedirect from 'heroku-ssl-redirect'\nimport { wakeUpServer } from './services/wake'\n\n// EXPRESS JS\nconst app = express()\n// DB\nconnectDB()\n// CRON HEROKU \nwakeUpServer()\n// CORS\napp.use(cors(corsOptions))\n// SSL\napp.use(sslRedirect())\n// PUBLIC\napp.use('/public', express.static(__dirname + '../public/'))\n// BODY\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n// COOKIE\napp.use(cookieParser())\n// FAV\napp.use(serveFavicon(path.join(__dirname, '../public', 'favicon.ico')))\n// FILES\napp.use(expressFileupload())\n// ROUTER\napp.use(router)\n// PORT\napp.set('port', (process.env.PORT || 3000))\n\n// HANDLINGS ERRORS\nlet shuttingDown = false\n\napp.use((req, res, next) => {\n  if (!shuttingDown) return next()\n\n  res.setHeader('Connection', 'close')\n  const err = new Error('Server is in the process of restarting')\n  err.status = 503\n  next(err)\n})\n\napp.use((req, res, next) => {\n  const err = new Error('Not Found')\n  err.status = 404\n  next(err)\n})\n\napp.use((err, req, res, next) => {\n  res.status(err.status || 500)\n  res.send({'error': err.message})\n  if (app.get('env') === 'development') {\n    logger.error(err)\n  }\n})\n\nexport default app\n"]}